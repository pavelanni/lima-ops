---
- name: Install K3s on control plane nodes
  hosts: "{{ target_cluster }}_control_plane"
  gather_facts: yes
  become: yes
  
  vars_files:
    - ../../vars/cluster_config.yml
  
  tasks:
    - name: Download K3s install script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0755'
    
    - name: Install K3s server
      ansible.builtin.shell: |
        INSTALL_K3S_EXEC="--disable traefik" /tmp/k3s-install.sh
      environment:
        INSTALL_K3S_VERSION: "{{ k3s_version | default('') }}"
      register: k3s_install_result
      changed_when: "'systemd' in k3s_install_result.stdout"
    
    - name: Wait for K3s to be ready
      ansible.builtin.wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        delay: 10
        timeout: 300
    
    - name: Get node token
      ansible.builtin.slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: node_token
    
    - name: Set node token fact
      ansible.builtin.set_fact:
        k3s_node_token: "{{ node_token.content | b64decode | trim }}"

- name: Install K3s on worker nodes
  hosts: "{{ target_cluster }}_workers"
  gather_facts: yes
  become: yes
  
  vars_files:
    - ../../vars/cluster_config.yml
  
  tasks:
    - name: Download K3s install script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0755'
    
    - name: Install K3s agent
      ansible.builtin.shell: |
        /tmp/k3s-install.sh
      environment:
        K3S_URL: "https://{{ hostvars[groups[target_cluster + '_control_plane'][0]]['ansible_default_ipv4']['address'] }}:6443"
        K3S_TOKEN: "{{ hostvars[groups[target_cluster + '_control_plane'][0]]['k3s_node_token'] }}"
        INSTALL_K3S_VERSION: "{{ k3s_version | default('') }}"
      register: k3s_agent_install_result
      changed_when: "'systemd' in k3s_agent_install_result.stdout"

- name: Configure kubectl access
  hosts: "{{ target_cluster }}_control_plane[0]"
  gather_facts: no
  become: no

  vars_files:
    - ../../vars/cluster_config.yml

  tasks:
    - name: Get current user
      ansible.builtin.shell: whoami
      register: current_user
      changed_when: false

    - name: Get user home directory
      ansible.builtin.shell: echo $HOME
      register: user_home
      changed_when: false

    - name: Create .kube directory
      ansible.builtin.file:
        path: "{{ user_home.stdout }}/.kube"
        state: directory
        mode: '0755'

    - name: Copy kubeconfig
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ user_home.stdout }}/.kube/config"
        owner: "{{ current_user.stdout }}"
        group: "{{ current_user.stdout }}"
        mode: '0600'
        remote_src: yes
      become: yes

    - name: Update kubeconfig server address for VM use
      ansible.builtin.replace:
        path: "{{ user_home.stdout }}/.kube/config"
        regexp: 'https://127\.0\.0\.1:6443'
        replace: "https://{{ ansible_default_ipv4.address }}:6443"

    - name: Fetch kubeconfig to local machine
      ansible.builtin.fetch:
        src: "{{ user_home.stdout }}/.kube/config"
        dest: "./kubeconfig-{{ kubernetes_cluster.name }}"
        flat: yes

    - name: Create host-accessible kubeconfig
      ansible.builtin.copy:
        src: "{{ user_home.stdout }}/.kube/config"
        dest: "{{ user_home.stdout }}/.kube/config-host"
        remote_src: yes
        mode: '0600'

    - name: Update kubeconfig server address for host access
      ansible.builtin.replace:
        path: "{{ user_home.stdout }}/.kube/config-host"
        regexp: 'https://.*:6443'
        replace: "https://127.0.0.1:6443"

    - name: Fetch host-accessible kubeconfig
      ansible.builtin.fetch:
        src: "{{ user_home.stdout }}/.kube/config-host"
        dest: "{{ playbook_dir }}/../../../kubeconfig-{{ kubernetes_cluster.name }}.yaml"
        flat: yes

- name: Label nodes for storage
  hosts: "{{ target_cluster }}_control_plane[0]"
  gather_facts: no
  become: no
  
  vars_files:
    - ../../vars/cluster_config.yml

  tasks:
    - name: Get user home directory
      ansible.builtin.shell: echo $HOME
      register: user_home
      changed_when: false

    - name: Label worker nodes for DirectPV
      ansible.builtin.shell: |
        kubectl label node {{ hostvars[item].ansible_host }} directpv=yes --overwrite
      loop: "{{ groups[target_cluster + '_workers'] }}"
      environment:
        KUBECONFIG: "{{ user_home.stdout }}/.kube/config"
      register: label_result
      changed_when: "'labeled' in label_result.stdout"

    - name: Taint control plane node
      ansible.builtin.shell: |
        kubectl taint node {{ hostvars[inventory_hostname].ansible_host }} node-role.kubernetes.io/control-plane:NoSchedule --overwrite
      environment:
        KUBECONFIG: "{{ user_home.stdout }}/.kube/config"
      register: taint_result
      changed_when: "'tainted' in taint_result.stdout or 'updated' in taint_result.stdout"
      failed_when:
        - taint_result.rc != 0
        - "'already has a taint' not in taint_result.stderr"

- name: Display kubeconfig information
  hosts: localhost
  gather_facts: no

  vars_files:
    - ../../vars/cluster_config.yml

  tasks:
    - name: Show kubeconfig location
      ansible.builtin.debug:
        msg: |

          ========================================
          K3s Installation Complete!
          ========================================

          Kubeconfig files have been created:

          1. For host access (recommended):
             {{ playbook_dir }}/../../../kubeconfig-{{ kubernetes_cluster.name }}.yaml

             To use from your host machine:
             export KUBECONFIG={{ playbook_dir }}/../../../kubeconfig-{{ kubernetes_cluster.name }}.yaml
             kubectl get nodes

          2. For VM access:
             SSH into control plane and use: kubectl get nodes

          ========================================